---
- name: Install Docker on Linux Mint LMDE 6
  hosts: all  # Targets all hosts; use --limit to specify subsets like machine3
  become: yes
  vars:
    docker_edition: ce
    docker_package: "docker-{{ docker_edition }}"
    docker_package_state: present
    docker_service_state: started
    docker_service_enabled: true
    docker_install_compose: true
    docker_version: ""
    containerd_version: ""
    docker_compose_version: "2.29.1"
    docker_repo_arch: "amd64"  # For apt repo (Debian convention)
    docker_repo_codename: "bookworm"  # Hardcode for LMDE 6 (based on Debian 12; overrides 'faye')
    docker_binary_arch: "{{ 'x86_64' if ansible_architecture == 'x86_64' else ansible_architecture }}"  # For GitHub binary
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ docker_repo_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ docker_repo_codename }} stable"
        state: present
        filename: docker
        update_cache: no  # Defer update to next task to avoid immediate failure

    - name: Update apt cache after adding repo
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install Docker packages
      apt:
        name:
          - "{{ docker_package }}"
          - "{{ docker_package }}-cli"
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: "{{ docker_package_state }}"
        update_cache: yes

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: "{{ docker_service_state }}"
        enabled: "{{ docker_service_enabled }}"

    - name: Add user to docker group (for non-root access)
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      when: ansible_user is defined

    - name: Create Docker CLI plugins directory
      file:
        path: /usr/local/lib/docker/cli-plugins
        state: directory
        mode: '0755'
      when: docker_install_compose

    - name: Check if Docker Compose plugin exists
      stat:
        path: /usr/local/lib/docker/cli-plugins/docker-compose
      register: compose_exists
      when: docker_install_compose

    - name: Download Docker Compose plugin if missing
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-{{ docker_binary_arch }}"
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: '0755'
      when:
        - docker_install_compose
        - not compose_exists.stat.exists | default(true)
